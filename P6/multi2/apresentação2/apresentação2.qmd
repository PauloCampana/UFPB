---
format:
    revealjs:
        theme: moon
lang: pt
title: M√©todos de classifica√ß√£o
subtitle: An√°lise Multivariada II
author: Paulo Ricardo Seganfredo Campana
date: today
date-format: long
callout-icon: false
highlight-style: github
monofontoptions: Scale = 1
logo: includes/logo.png
echo: true
self-contained-math: true
self-contained: true
embed-resources: true
# cache: true
---

## Resumo dos dados
Os dados s√£o sobre o consumo de energia el√©trica, g√°s natural e emiss√µes de gases do efeito estufa em pr√©dios e constru√ß√µes grandes na cidade de Chicago.

Cada constru√ß√£o √© categorizada em um tipo n√£o exaust√≠vo, escolhi 3 tipos de constru√ß√µes para serem categorizadas: supermercados, hoteis e escolas.

Temos dois principais tipos de vari√°veis neste banco:

* Vari√°veis de medida bruta (consumo de energia el√©trica, g√°s natural, gases).
* Vari√°veis normalizadas pela √°rea da constru√ß√£o (consumo por metro quadrado).

## Resumo dos dados
No total s√£o 274 hoteis, 1483 escolas e 168 supermercados, e temos 9 vari√°veis cont√≠nuas que ser√£o padronizadas.

```{r}
#| warning: false
library(tidyverse)
library(cluster)
library(factoextra)
library(mclust)

data <- read_csv("energy.csv") |>
    filter(property_type %in% c(
        "Hotel", "K-12 School", "Supermarket/Grocery Store"
    )) |>
    mutate(property_type = factor(property_type,
        labels = c("Hotel", "Escola", "Supermercado"),
    ))

X <- data |>
    mutate(across(area:eui_source_wn, scale)) |>
    select(-property_type, -stars, -score) |>
    as.matrix()
```

```{r}
#| echo: false
options(digits = 3)
set.seed(0)

theme_moon <- theme(
    plot.background = element_rect("#002b36"),
    panel.background = element_blank(),
    panel.grid = element_line("#93a1a120"),
    panel.grid.minor = element_blank(),
    axis.ticks = element_line("#93a1a120"),
    strip.background = element_rect("#104b56"),
    text = element_text(colour = "#93a1a1"),
    axis.text = element_text(colour = "#93a1a1"),
    strip.text = element_text(colour = "#93a1a1"),
    legend.background = element_blank(),
    legend.key = element_blank(),
)
```

## Classifica√ß√£o Hier√°rquica
Usei a dist√¢ncia euclidiana e o m√©todo de Ward para a classifica√ß√£o hier√°rquica com 3 clusters. As cores do dendograma significam:

* üü® Amarelo: hoteis
* üü© Verde: escolas
* üü• Vermelho: supermercados

```{r}
#| output-location: slide
#| out-width: 100%
#| fig-height: 6
dist_euc <- dist(X, method = "euclidian")
clust <- hclust(dist_euc, method = "ward.D")
par(bg = "#002b36", fg = "#93a1a1", mar = rep(0, 4))
plot(
    clust, hang = 0,
    labels = c("üü®", "üü©", "üü•")[data$property_type],
    axes = FALSE, ann = FALSE
)
rect.hclust(clust, k = 3, border = c("#7cb342", "#f44336", "#ffcc32"))
```

## Compara√ß√£o de m√©todos
O m√©todo Ward foi selecionado pois faz correspond√™ncia melhor com o tipo de propriedade, todos os m√©todos testados produzem altos coeficientes de aglomera√ß√£o por√©m resultam em clusters muito assim√©tricos, onde basicamente todas as observa√ß√µes pert√™ncem h√° um s√≥ cluster.

```{r}
#| collapse: true
sapply(
    c("average", "single", "complete", "ward"),
    function(m) agnes(X, method = m)$ac
)
```

## Efici√™ncia da classifica√ß√£o
De modo geral pela matriz de confus√£o, as escolas s√£o classificadas no 1¬∫ cluster, os supermercados no 3¬∞, por√©m os hoteis est√£o divididos entre o 1¬∫ e 3¬∫ cluster.

```{r}
#| collapse: true
table(data.frame(
    tipo = data$property_type,
    classe = cutree(clust, k = 3)
))
```

```{r}
#| output-location: slide
#| out-width: 100%
#| fig-height: 6
fviz_cluster(
    list(
        data = X,
        cluster = c("Escola", "Supermercado", "Hotel")[cutree(clust, k = 3)]
    ),
    show.clust.cent = FALSE, geom = "point",
    colour = c("#ffcc32", "#7cb342", "#f44336")[data$property_type],
) + scale_color_manual(
    values = c("#7cb342", "#ffcc32", "#f44336"),
    aesthetics = c("colour", "fill")
) + theme_moon
```

## K-means
Utilizando agora a classifica√ß√£o n√£o-hier√°rquica com K-means, escolhi 3 grupos com o centroide inicial baseado na m√©dia de todas as vari√°veis num√©ricas por tipo de constru√ß√£o. Por√©m usando uma semente aleat√≥ria, a classifica√ß√£o foi exatamente a mesma.

```{r}
km <- data |>
    mutate(across(area:eui_source_wn, scale)) |>
    summarise(across(area:eui_source_wn, mean), .by = property_type) |>
    select(-property_type) |>
    kmeans(X, centers = _)

## Within cluster sum of squares by cluster:
## [1] 2725 1724 2334
##  (between_SS / total_SS =  60.8 %)
```

## Efici√™ncia da classifica√ß√£o
A correspond√™ncia entre tipo da propriedade e a classe atribuida √© a mesma do m√©todo hier√°rquico, por√©m uma maior parte dos hoteis s√£o err√¥neamente classificados como escola.

```{r}
#| collapse: true
table(data.frame(
    tipo = data$property_type,
    classe = km$cluster
))
```

```{r}
#| output-location: slide
#| out-width: 100%
#| fig-height: 6
fviz_cluster(
    list(
        data = X,
        cluster = c("Escola", "Hotel", "Supermercado")[km$cluster]
    ),
    show.clust.cent = FALSE, geom = "point",
    colour = c("#ffcc32", "#7cb342", "#f44336")[data$property_type],
) + scale_color_manual(
    values = c("#7cb342", "#ffcc32", "#f44336"),
    aesthetics = c("colour", "fill")
) + theme_moon
```

## Mistura Gaussiana
Dos diversos modelos de mistura Gaussiana ajustados, decidi apresentar dois modelos, ambos com 3 grupos, os modelo "VVV" selecionado pelo crit√©rio BIC e o modelo "EVI" que decidi ser o melhor na classifica√ß√£o do tipo de constru√ß√£o.

O modelo "VVV" √© tem todos os par√¢metros de volume, forma e orienta√ß√£o livres enquanto que o "EVI" tem orienta√ß√£o fixa e volumes iguais.

```{r}
#| warning: false
#| output-location: slide
#| out-width: 100%
#| fig-height: 6
bic <- mclustBIC(X)
par(
    bg = "#002b36", fg = "#93a1a1",
    col.axis = "#93a1a1", col.lab = "#93a1a1"
)
plot(bic)
```

## Efici√™ncia da classifica√ß√£o
O modelo "EVI" classifica melhor as escolas em apenas uma classe.

```{r}
#| collapse: true
vvv <- Mclust(X, G = 3, modelNames = "VVV")
table(data.frame(
    tipo = data$property_type,
    classe = vvv$classification
))
```

```{r}
#| collapse: true
evi <- Mclust(X, G = 3, modelNames = "EVI")
table(data.frame(
    tipo = data$property_type,
    classe = evi$classification
))
```

## Modelo VVV
Este modelo n√£o apresenta boa classifica√ß√£o para hoteis e escolas e todos os clusters apresentam grande quantidade de observa√ß√µes de tipos diferentes de constru√ß√µes.

```{r}
#| output-location: slide
#| out-width: 100%
#| fig-height: 6
fviz_cluster(
    list(
        data = X,
        cluster = c("Escola", "Hotel", "Supermercado")[vvv$classification]
    ),
    show.clust.cent = FALSE, geom = "point",
    colour = c("#ffcc32", "#7cb342", "#f44336")[data$property_type],
) + scale_color_manual(
    values = c("#7cb342", "#ffcc32", "#f44336"),
    aesthetics = c("colour", "fill")
) + theme_moon
```

## Modelo EVI
J√° o modelo "EVI" classifica bem escolas e supermercados por√©m metade dos hoteis continuam sendo confundidos com escolas.

```{r}
#| output-location: slide
#| out-width: 100%
#| fig-height: 6
fviz_cluster(
    list(
        data = X,
        cluster = c("Escola", "Hotel", "Supermercado")[evi$classification]
    ),
    show.clust.cent = FALSE, geom = "point",
    colour = c("#ffcc32", "#7cb342", "#f44336")[data$property_type],
) + scale_color_manual(
    values = c("#7cb342", "#ffcc32", "#f44336"),
    aesthetics = c("colour", "fill")
) + theme_moon
```

##
